/*
 * Binance Staking REST API
 * OpenAPI Specification for the Binance Staking REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.staking.rest.model;

import com.binance.connector.client.staking.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.HashSet;
import java.util.Objects;
import org.hibernate.validator.constraints.*;

/** GetOnChainYieldsLockedProductListResponseRowsInner */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class GetOnChainYieldsLockedProductListResponseRowsInner {
    public static final String SERIALIZED_NAME_PROJECT_ID = "projectId";

    @SerializedName(SERIALIZED_NAME_PROJECT_ID)
    @jakarta.annotation.Nullable
    private String projectId;

    public static final String SERIALIZED_NAME_DETAIL = "detail";

    @SerializedName(SERIALIZED_NAME_DETAIL)
    @jakarta.annotation.Nullable
    private GetOnChainYieldsLockedProductListResponseRowsInnerDetail detail;

    public static final String SERIALIZED_NAME_QUOTA = "quota";

    @SerializedName(SERIALIZED_NAME_QUOTA)
    @jakarta.annotation.Nullable
    private GetOnChainYieldsLockedProductListResponseRowsInnerQuota quota;

    public GetOnChainYieldsLockedProductListResponseRowsInner() {}

    public GetOnChainYieldsLockedProductListResponseRowsInner projectId(
            @jakarta.annotation.Nullable String projectId) {
        this.projectId = projectId;
        return this;
    }

    /**
     * Get projectId
     *
     * @return projectId
     */
    @jakarta.annotation.Nullable
    public String getProjectId() {
        return projectId;
    }

    public void setProjectId(@jakarta.annotation.Nullable String projectId) {
        this.projectId = projectId;
    }

    public GetOnChainYieldsLockedProductListResponseRowsInner detail(
            @jakarta.annotation.Nullable
                    GetOnChainYieldsLockedProductListResponseRowsInnerDetail detail) {
        this.detail = detail;
        return this;
    }

    /**
     * Get detail
     *
     * @return detail
     */
    @jakarta.annotation.Nullable
    @Valid
    public GetOnChainYieldsLockedProductListResponseRowsInnerDetail getDetail() {
        return detail;
    }

    public void setDetail(
            @jakarta.annotation.Nullable
                    GetOnChainYieldsLockedProductListResponseRowsInnerDetail detail) {
        this.detail = detail;
    }

    public GetOnChainYieldsLockedProductListResponseRowsInner quota(
            @jakarta.annotation.Nullable
                    GetOnChainYieldsLockedProductListResponseRowsInnerQuota quota) {
        this.quota = quota;
        return this;
    }

    /**
     * Get quota
     *
     * @return quota
     */
    @jakarta.annotation.Nullable
    @Valid
    public GetOnChainYieldsLockedProductListResponseRowsInnerQuota getQuota() {
        return quota;
    }

    public void setQuota(
            @jakarta.annotation.Nullable
                    GetOnChainYieldsLockedProductListResponseRowsInnerQuota quota) {
        this.quota = quota;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetOnChainYieldsLockedProductListResponseRowsInner
                getOnChainYieldsLockedProductListResponseRowsInner =
                        (GetOnChainYieldsLockedProductListResponseRowsInner) o;
        return Objects.equals(
                        this.projectId,
                        getOnChainYieldsLockedProductListResponseRowsInner.projectId)
                && Objects.equals(
                        this.detail, getOnChainYieldsLockedProductListResponseRowsInner.detail)
                && Objects.equals(
                        this.quota, getOnChainYieldsLockedProductListResponseRowsInner.quota);
    }

    @Override
    public int hashCode() {
        return Objects.hash(projectId, detail, quota);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetOnChainYieldsLockedProductListResponseRowsInner {\n");
        sb.append("		projectId: ").append(toIndentedString(projectId)).append("\n");
        sb.append("		detail: ").append(toIndentedString(detail)).append("\n");
        sb.append("		quota: ").append(toIndentedString(quota)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object projectIdValue = getProjectId();
        String projectIdValueAsString = "";
        projectIdValueAsString = projectIdValue.toString();
        sb.append("projectId=").append(urlEncode(projectIdValueAsString)).append("");
        Object detailValue = getDetail();
        String detailValueAsString = "";
        detailValueAsString = detailValue.toString();
        sb.append("detail=").append(urlEncode(detailValueAsString)).append("");
        Object quotaValue = getQuota();
        String quotaValueAsString = "";
        quotaValueAsString = quotaValue.toString();
        sb.append("quota=").append(urlEncode(quotaValueAsString)).append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("projectId");
        openapiFields.add("detail");
        openapiFields.add("quota");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     GetOnChainYieldsLockedProductListResponseRowsInner
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetOnChainYieldsLockedProductListResponseRowsInner.openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in"
                                    + " GetOnChainYieldsLockedProductListResponseRowsInner is not"
                                    + " found in the empty JSON string",
                                GetOnChainYieldsLockedProductListResponseRowsInner
                                        .openapiRequiredFields
                                        .toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("projectId") != null && !jsonObj.get("projectId").isJsonNull())
                && !jsonObj.get("projectId").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `projectId` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("projectId").toString()));
        }
        // validate the optional field `detail`
        if (jsonObj.get("detail") != null && !jsonObj.get("detail").isJsonNull()) {
            GetOnChainYieldsLockedProductListResponseRowsInnerDetail.validateJsonElement(
                    jsonObj.get("detail"));
        }
        // validate the optional field `quota`
        if (jsonObj.get("quota") != null && !jsonObj.get("quota").isJsonNull()) {
            GetOnChainYieldsLockedProductListResponseRowsInnerQuota.validateJsonElement(
                    jsonObj.get("quota"));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetOnChainYieldsLockedProductListResponseRowsInner.class.isAssignableFrom(
                    type.getRawType())) {
                return null; // this class only serializes
                // 'GetOnChainYieldsLockedProductListResponseRowsInner' and its
                // subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<GetOnChainYieldsLockedProductListResponseRowsInner> thisAdapter =
                    gson.getDelegateAdapter(
                            this,
                            TypeToken.get(
                                    GetOnChainYieldsLockedProductListResponseRowsInner.class));

            return (TypeAdapter<T>)
                    new TypeAdapter<GetOnChainYieldsLockedProductListResponseRowsInner>() {
                        @Override
                        public void write(
                                JsonWriter out,
                                GetOnChainYieldsLockedProductListResponseRowsInner value)
                                throws IOException {
                            JsonElement obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public GetOnChainYieldsLockedProductListResponseRowsInner read(
                                JsonReader in) throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of GetOnChainYieldsLockedProductListResponseRowsInner given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GetOnChainYieldsLockedProductListResponseRowsInner
     * @throws IOException if the JSON string is invalid with respect to
     *     GetOnChainYieldsLockedProductListResponseRowsInner
     */
    public static GetOnChainYieldsLockedProductListResponseRowsInner fromJson(String jsonString)
            throws IOException {
        return JSON.getGson()
                .fromJson(jsonString, GetOnChainYieldsLockedProductListResponseRowsInner.class);
    }

    /**
     * Convert an instance of GetOnChainYieldsLockedProductListResponseRowsInner to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}

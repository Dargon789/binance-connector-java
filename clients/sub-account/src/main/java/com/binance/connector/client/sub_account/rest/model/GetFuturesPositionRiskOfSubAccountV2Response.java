/*
 * Binance Sub Account REST API
 * OpenAPI Specification for the Binance Sub Account REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.sub_account.rest.model;

import com.binance.connector.client.sub_account.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;
import org.hibernate.validator.constraints.*;

/** GetFuturesPositionRiskOfSubAccountV2Response */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class GetFuturesPositionRiskOfSubAccountV2Response {
    public static final String SERIALIZED_NAME_FUTURE_POSITION_RISK_VOS = "futurePositionRiskVos";

    @SerializedName(SERIALIZED_NAME_FUTURE_POSITION_RISK_VOS)
    @jakarta.annotation.Nullable
    private List<@Valid GetFuturesPositionRiskOfSubAccountV2ResponseFuturePositionRiskVosInner>
            futurePositionRiskVos;

    public static final String SERIALIZED_NAME_DELIVERY_POSITION_RISK_VOS =
            "deliveryPositionRiskVos";

    @SerializedName(SERIALIZED_NAME_DELIVERY_POSITION_RISK_VOS)
    @jakarta.annotation.Nullable
    private List<@Valid GetFuturesPositionRiskOfSubAccountV2ResponseDeliveryPositionRiskVosInner>
            deliveryPositionRiskVos;

    public GetFuturesPositionRiskOfSubAccountV2Response() {}

    public GetFuturesPositionRiskOfSubAccountV2Response futurePositionRiskVos(
            @jakarta.annotation.Nullable
                    List<
                                    @Valid
                                    GetFuturesPositionRiskOfSubAccountV2ResponseFuturePositionRiskVosInner>
                            futurePositionRiskVos) {
        this.futurePositionRiskVos = futurePositionRiskVos;
        return this;
    }

    public GetFuturesPositionRiskOfSubAccountV2Response addFuturePositionRiskVosItem(
            GetFuturesPositionRiskOfSubAccountV2ResponseFuturePositionRiskVosInner
                    futurePositionRiskVosItem) {
        if (this.futurePositionRiskVos == null) {
            this.futurePositionRiskVos = new ArrayList<>();
        }
        this.futurePositionRiskVos.add(futurePositionRiskVosItem);
        return this;
    }

    /**
     * Get futurePositionRiskVos
     *
     * @return futurePositionRiskVos
     */
    @jakarta.annotation.Nullable
    @Valid
    public List<@Valid GetFuturesPositionRiskOfSubAccountV2ResponseFuturePositionRiskVosInner>
            getFuturePositionRiskVos() {
        return futurePositionRiskVos;
    }

    public void setFuturePositionRiskVos(
            @jakarta.annotation.Nullable
                    List<
                                    @Valid
                                    GetFuturesPositionRiskOfSubAccountV2ResponseFuturePositionRiskVosInner>
                            futurePositionRiskVos) {
        this.futurePositionRiskVos = futurePositionRiskVos;
    }

    public GetFuturesPositionRiskOfSubAccountV2Response deliveryPositionRiskVos(
            @jakarta.annotation.Nullable
                    List<
                                    @Valid
                                    GetFuturesPositionRiskOfSubAccountV2ResponseDeliveryPositionRiskVosInner>
                            deliveryPositionRiskVos) {
        this.deliveryPositionRiskVos = deliveryPositionRiskVos;
        return this;
    }

    public GetFuturesPositionRiskOfSubAccountV2Response addDeliveryPositionRiskVosItem(
            GetFuturesPositionRiskOfSubAccountV2ResponseDeliveryPositionRiskVosInner
                    deliveryPositionRiskVosItem) {
        if (this.deliveryPositionRiskVos == null) {
            this.deliveryPositionRiskVos = new ArrayList<>();
        }
        this.deliveryPositionRiskVos.add(deliveryPositionRiskVosItem);
        return this;
    }

    /**
     * Get deliveryPositionRiskVos
     *
     * @return deliveryPositionRiskVos
     */
    @jakarta.annotation.Nullable
    @Valid
    public List<@Valid GetFuturesPositionRiskOfSubAccountV2ResponseDeliveryPositionRiskVosInner>
            getDeliveryPositionRiskVos() {
        return deliveryPositionRiskVos;
    }

    public void setDeliveryPositionRiskVos(
            @jakarta.annotation.Nullable
                    List<
                                    @Valid
                                    GetFuturesPositionRiskOfSubAccountV2ResponseDeliveryPositionRiskVosInner>
                            deliveryPositionRiskVos) {
        this.deliveryPositionRiskVos = deliveryPositionRiskVos;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetFuturesPositionRiskOfSubAccountV2Response getFuturesPositionRiskOfSubAccountV2Response =
                (GetFuturesPositionRiskOfSubAccountV2Response) o;
        return Objects.equals(
                        this.futurePositionRiskVos,
                        getFuturesPositionRiskOfSubAccountV2Response.futurePositionRiskVos)
                && Objects.equals(
                        this.deliveryPositionRiskVos,
                        getFuturesPositionRiskOfSubAccountV2Response.deliveryPositionRiskVos);
    }

    @Override
    public int hashCode() {
        return Objects.hash(futurePositionRiskVos, deliveryPositionRiskVos);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetFuturesPositionRiskOfSubAccountV2Response {\n");
        sb.append("		futurePositionRiskVos: ")
                .append(toIndentedString(futurePositionRiskVos))
                .append("\n");
        sb.append("		deliveryPositionRiskVos: ")
                .append(toIndentedString(deliveryPositionRiskVos))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object futurePositionRiskVosValue = getFuturePositionRiskVos();
        String futurePositionRiskVosValueAsString = "";
        futurePositionRiskVosValueAsString =
                (String)
                        ((Collection) futurePositionRiskVosValue)
                                .stream().map(Object::toString).collect(Collectors.joining(","));
        sb.append("futurePositionRiskVos=")
                .append(urlEncode(futurePositionRiskVosValueAsString))
                .append("");
        Object deliveryPositionRiskVosValue = getDeliveryPositionRiskVos();
        String deliveryPositionRiskVosValueAsString = "";
        deliveryPositionRiskVosValueAsString =
                (String)
                        ((Collection) deliveryPositionRiskVosValue)
                                .stream().map(Object::toString).collect(Collectors.joining(","));
        sb.append("deliveryPositionRiskVos=")
                .append(urlEncode(deliveryPositionRiskVosValueAsString))
                .append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("futurePositionRiskVos");
        openapiFields.add("deliveryPositionRiskVos");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     GetFuturesPositionRiskOfSubAccountV2Response
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetFuturesPositionRiskOfSubAccountV2Response.openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in"
                                    + " GetFuturesPositionRiskOfSubAccountV2Response is not found"
                                    + " in the empty JSON string",
                                GetFuturesPositionRiskOfSubAccountV2Response.openapiRequiredFields
                                        .toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if (jsonObj.get("futurePositionRiskVos") != null
                && !jsonObj.get("futurePositionRiskVos").isJsonNull()) {
            JsonArray jsonArrayfuturePositionRiskVos =
                    jsonObj.getAsJsonArray("futurePositionRiskVos");
            if (jsonArrayfuturePositionRiskVos != null) {
                // ensure the json data is an array
                if (!jsonObj.get("futurePositionRiskVos").isJsonArray()) {
                    throw new IllegalArgumentException(
                            String.format(
                                    "Expected the field `futurePositionRiskVos` to be an array in"
                                            + " the JSON string but got `%s`",
                                    jsonObj.get("futurePositionRiskVos").toString()));
                }

                // validate the optional field `futurePositionRiskVos` (array)
                for (int i = 0; i < jsonArrayfuturePositionRiskVos.size(); i++) {
                    GetFuturesPositionRiskOfSubAccountV2ResponseFuturePositionRiskVosInner
                            .validateJsonElement(jsonArrayfuturePositionRiskVos.get(i));
                }
                ;
            }
        }
        if (jsonObj.get("deliveryPositionRiskVos") != null
                && !jsonObj.get("deliveryPositionRiskVos").isJsonNull()) {
            JsonArray jsonArraydeliveryPositionRiskVos =
                    jsonObj.getAsJsonArray("deliveryPositionRiskVos");
            if (jsonArraydeliveryPositionRiskVos != null) {
                // ensure the json data is an array
                if (!jsonObj.get("deliveryPositionRiskVos").isJsonArray()) {
                    throw new IllegalArgumentException(
                            String.format(
                                    "Expected the field `deliveryPositionRiskVos` to be an array in"
                                            + " the JSON string but got `%s`",
                                    jsonObj.get("deliveryPositionRiskVos").toString()));
                }

                // validate the optional field `deliveryPositionRiskVos` (array)
                for (int i = 0; i < jsonArraydeliveryPositionRiskVos.size(); i++) {
                    GetFuturesPositionRiskOfSubAccountV2ResponseDeliveryPositionRiskVosInner
                            .validateJsonElement(jsonArraydeliveryPositionRiskVos.get(i));
                }
                ;
            }
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetFuturesPositionRiskOfSubAccountV2Response.class.isAssignableFrom(
                    type.getRawType())) {
                return null; // this class only serializes
                // 'GetFuturesPositionRiskOfSubAccountV2Response' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<GetFuturesPositionRiskOfSubAccountV2Response> thisAdapter =
                    gson.getDelegateAdapter(
                            this,
                            TypeToken.get(GetFuturesPositionRiskOfSubAccountV2Response.class));

            return (TypeAdapter<T>)
                    new TypeAdapter<GetFuturesPositionRiskOfSubAccountV2Response>() {
                        @Override
                        public void write(
                                JsonWriter out, GetFuturesPositionRiskOfSubAccountV2Response value)
                                throws IOException {
                            JsonElement obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public GetFuturesPositionRiskOfSubAccountV2Response read(JsonReader in)
                                throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of GetFuturesPositionRiskOfSubAccountV2Response given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GetFuturesPositionRiskOfSubAccountV2Response
     * @throws IOException if the JSON string is invalid with respect to
     *     GetFuturesPositionRiskOfSubAccountV2Response
     */
    public static GetFuturesPositionRiskOfSubAccountV2Response fromJson(String jsonString)
            throws IOException {
        return JSON.getGson()
                .fromJson(jsonString, GetFuturesPositionRiskOfSubAccountV2Response.class);
    }

    /**
     * Convert an instance of GetFuturesPositionRiskOfSubAccountV2Response to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
